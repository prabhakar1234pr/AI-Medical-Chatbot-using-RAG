{"ast":null,"code":"var _jsxFileName = \"C:\\\\medical-chatbot-backend\\\\medical-chatbot-frontend\\\\src\\\\components\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport './ChatBox.css';\nimport Message from './Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBox({\n  messages,\n  isLoading\n}) {\n  _s();\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(scrollToBottom, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-box\",\n    children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n      text: message.text,\n      sender: message.sender\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing-indicator\",\n      children: \"Bot is typing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"0epSoi03NVSoD0I0FiLK4iVNXOA=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useRef","useEffect","Message","jsxDEV","_jsxDEV","ChatBox","messages","isLoading","_s","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","className","children","map","message","index","text","sender","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/medical-chatbot-backend/medical-chatbot-frontend/src/components/ChatBox.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport './ChatBox.css';\r\nimport Message from './Message';\r\n\r\nfunction ChatBox({ messages, isLoading }) {\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(scrollToBottom, [messages]);\r\n\r\n  return (\r\n    <div className=\"chat-box\">\r\n      {messages.map((message, index) => (\r\n        <Message key={index} text={message.text} sender={message.sender} />\r\n      ))}\r\n      {isLoading && <div className=\"typing-indicator\">Bot is typing...</div>}\r\n      <div ref={messagesEndRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,eAAe;AACtB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,OAAOA,CAAC;EAAEC,QAAQ;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAMC,cAAc,GAAGT,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAMU,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAF,cAAc,CAACG,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAEDb,SAAS,CAACS,cAAc,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAErC,oBACEF,OAAA;IAAKW,SAAS,EAAC,UAAU;IAAAC,QAAA,GACtBV,QAAQ,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3Bf,OAAA,CAACF,OAAO;MAAakB,IAAI,EAAEF,OAAO,CAACE,IAAK;MAACC,MAAM,EAAEH,OAAO,CAACG;IAAO,GAAlDF,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+C,CACnE,CAAC,EACDlB,SAAS,iBAAIH,OAAA;MAAKW,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtErB,OAAA;MAAKsB,GAAG,EAAEjB;IAAe;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;AAACjB,EAAA,CAlBQH,OAAO;AAAAsB,EAAA,GAAPtB,OAAO;AAoBhB,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}