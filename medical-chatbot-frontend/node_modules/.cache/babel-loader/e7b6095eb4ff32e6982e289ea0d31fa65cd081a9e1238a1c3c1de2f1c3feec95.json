{"ast":null,"code":"var _jsxFileName = \"C:\\\\medical-chatbot-backend\\\\medical-chatbot-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [apiStatus, setApiStatus] = useState('Checking...');\n\n  // Check if the API is reachable on component mount\n  useEffect(() => {\n    const checkApi = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/');\n        const data = await response.json();\n        setApiStatus(data.message || 'API is connected');\n      } catch (error) {\n        console.error('API check error:', error);\n        setApiStatus('API connection failed');\n      }\n    };\n    checkApi();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      role: 'user',\n      content: input\n    };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    setLoading(true);\n    try {\n      // Use the test endpoint\n      const response = await fetch('http://localhost:8000/chat');\n      const data = await response.json();\n      const botMessage = {\n        role: 'assistant',\n        content: data.response\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again.'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Medical Chatbot Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"api-status\",\n        children: [\"API Status: \", apiStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.role}`,\n          children: msg.content\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant\",\n          children: \"Thinking...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your message...\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8O3Sd6W353QgXz7v0X+a+ib3H9Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","loading","setLoading","apiStatus","setApiStatus","checkApi","response","fetch","data","json","message","error","console","handleSubmit","e","preventDefault","trim","userMessage","role","content","botMessage","prev","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/medical-chatbot-backend/medical-chatbot-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [apiStatus, setApiStatus] = useState('Checking...');\r\n\r\n  // Check if the API is reachable on component mount\r\n  useEffect(() => {\r\n    const checkApi = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8000/');\r\n        const data = await response.json();\r\n        setApiStatus(data.message || 'API is connected');\r\n      } catch (error) {\r\n        console.error('API check error:', error);\r\n        setApiStatus('API connection failed');\r\n      }\r\n    };\r\n    \r\n    checkApi();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { role: 'user', content: input };\r\n    setMessages([...messages, userMessage]);\r\n    setInput('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Use the test endpoint\r\n      const response = await fetch('http://localhost:8000/chat');\r\n      const data = await response.json();\r\n      const botMessage = { role: 'assistant', content: data.response };\r\n      setMessages(prev => [...prev, botMessage]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      const errorMessage = { role: 'assistant', content: 'Sorry, I encountered an error. Please try again.' };\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Medical Chatbot Demo</h1>\r\n        <div className=\"api-status\">API Status: {apiStatus}</div>\r\n      </header>\r\n      <main className=\"chat-container\">\r\n        <div className=\"messages\">\r\n          {messages.map((msg, idx) => (\r\n            <div key={idx} className={`message ${msg.role}`}>\r\n              {msg.content}\r\n            </div>\r\n          ))}\r\n          {loading && <div className=\"message assistant\">Thinking...</div>}\r\n        </div>\r\n        <form onSubmit={handleSubmit} className=\"input-form\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type your message...\"\r\n            disabled={loading}\r\n          />\r\n          <button type=\"submit\" disabled={loading}>Send</button>\r\n        </form>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}